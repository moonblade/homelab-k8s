apiVersion: apps/v1
kind: Deployment
metadata:
  name: deaddrop
  labels:
    app: deaddrop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deaddrop
  template:
    metadata:
      labels:
        app: deaddrop
    spec:
      initContainers:
      - name: settings-editor
        image: busybox
        envFrom:
          - configMapRef:
              name: settings-override
        command:
          - sh
          - -c
          - |
            SETTINGS_FILE="/config/settings.json"
            
            if [ ! -f "$SETTINGS_FILE" ]; then
              echo "settings.json not found, skipping modification."
              exit 0
            fi

            echo "Modifying settings.json with values from ConfigMap..."
            
            echo "=== Current settings.json content ==="
            cat "$SETTINGS_FILE"
            echo "===================================="

            for key in $(env | awk -F= '{print $1}'); do
              value=$(eval echo \$$key)

              echo "Processing key: $key"
              echo "Original value from ConfigMap: $value"

              # Ensure value is properly formatted for JSON
              case "$value" in
                true|false) ;;
                ''|*[!0-9]*) value="\"$value\"" ;;  # Quote strings
              esac

              echo "Formatted value for JSON: $value"

              # Use jq to safely modify JSON
              jq --arg key "$key" --argjson value "$value" '.[$key] = $value' "$SETTINGS_FILE" > "/tmp/settings.json"
              
              if [ $? -ne 0 ]; then
                echo "Error updating settings.json with key: $key"
              else
                echo "Successfully updated $key in settings.json"
                mv /tmp/settings.json "$SETTINGS_FILE"
              fi
            done

            echo "=== Updated settings.json content ==="
            cat "$SETTINGS_FILE"
            echo "===================================="
            
            echo "Settings updated."
        volumeMounts:
          - name: config
            mountPath: /config
      containers:
      - name: deaddrop
        image: linuxserver/transmission:latest
        ports:
        - name: http
          containerPort: 9091
          protocol: TCP
        - name: torrent
          containerPort: 51413
          protocol: TCP
        - name: torrent-udp
          containerPort: 51413
          protocol: UDP
        volumeMounts:
        - name: config
          mountPath: /config
        - name: data
          mountPath: /downloads
        - name: watch
          mountPath: /watch
        envFrom:
          - secretRef:
              name: deaddrop-secret
        env:
        - name: PUID
          value: "1001"
        - name: PGID
          value: "1001"
        - name: UMASK
          value: "022"
        readinessProbe:
          exec:
            command:
            - test
            - -f
            - /downloads/complete/DONOTDELETE
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - test
            - -f
            - /downloads/complete/DONOTDELETE
          initialDelaySeconds: 10
          periodSeconds: 30
      volumes:
      - name: config
        hostPath:
          path: /mnt/secondary/deaddrop/config
          type: DirectoryOrCreate
      - name: data
        hostPath:
          path: /mnt/secondary/deaddrop/data
          type: DirectoryOrCreate
      - name: watch
        hostPath:
          path: /mnt/secondary/deaddrop/watch
          type: DirectoryOrCreate

