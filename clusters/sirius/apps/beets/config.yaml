apiVersion: v1
kind: ConfigMap
metadata:
  name: config-yaml
data:
  config.yaml: |
    plugins: audible copyartifacts edit fromfilename scrub web
    directory: /audiobooks
    paths:
      # For books that belong to a series
      "albumtype:audiobook series_name::.+ series_position::.+": $albumartist/%ifdef{series_name}/%ifdef{series_position} - $album%aunique{}/$track - $title
      "albumtype:audiobook series_name::.+": $albumartist/%ifdef{series_name}/$album%aunique{}/$track - $title
      # Stand-alone books
      "albumtype:audiobook": $albumartist/$album%aunique{}/$track - $title
      default: $albumartist/$album%aunique{}/$track - $title
      singleton: Non-Album/$artist - $title
      comp: Compilations/$album%aunique{}/$track - $title
      albumtype_soundtrack: Soundtracks/$album/$track $title

    # disables musicbrainz lookup, as it doesn't help for audiobooks
    musicbrainz:
      enabled: no

    audible:
      # if the number of files in the book is the same as the number of chapters from Audible,
      # attempt to match each file to an audible chapter
      match_chapters: true
      source_weight: 0.0 # disable the source_weight penalty
      fetch_art: true # whether to retrieve cover art
      include_narrator_in_artists: true # include author and narrator in artist tag. Or just author
      keep_series_reference_in_title: true # set to false to remove ", Book X" from end of titles
      keep_series_reference_in_subtitle: true # set to false to remove subtitle if it contains the series name and the word book ex. "Book 1 in Great Series", "Great Series, Book 1"
      write_description_file: true # output desc.txt
      write_reader_file: true # output reader.txt
      region: us # the region from which to obtain metadata can be omitted, by default it is "us"
                 # pick one of the available values: au, ca, de, es, fr, in, it, jp, us, uk
                 # the region value can be set for each book individually during import/re-import
                 # also it is automatically derived from 'WOAF' (WWWAUDIOFILE) tag
                 # which may contain a URL such as 'https://www.audible.com/pd/ASINSTRING' or 'audible.com'

    copyartifacts:
      extensions: .yml # so that metadata.yml is copied, see below

    scrub:
      auto: yes # optional, enabling this is personal preference

    web:
      host: 0.0.0.0
      port: 80
      cors: '*'
  gui-config.yaml: |
    gui:
        num_workers_preview: 4 # how many previews to generate in parallel

        library:
            readonly: no

        tags:
            expand_tags: yes # for tag groups, on page load, show tag details?
            recent_days: 14 # Number of days to consider for the "recent" tag group
            order_by: "name" # how to sort tags within the trag groups: "name" (the album folder basename) | "date_created" | "date_modified"

        terminal:
            start_path: "/downloads" # the directory where to start new terminal sessions

        inbox:
            concat_nested_folders: yes # show multiple folders in one line if they only have one child
            expand_files: no # on page load, show files in (album) folders, or collapse them

            folders: # dont forget to volume-map these folders in your docker-compose.yml
                downloads:
                    name: "Downloads"
                    path: "/downloads"
                    autotag: auto
                    # autotag: no # no | "preview" | "import" | "auto"
                    # autotag controls what should happen with newly added album folders.
                    # no: do nothing
                    # "preview": fetch data but do not import (recommended)
                    # "import": fetch data and always import (not recommended)
                    # "auto": fetch data and import if a good match is found (recommended for established libraries,
                    #         but not for a big initial import when you start with beets for the first time)

