apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebrowser
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filebrowser
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      containers:
        - name: filebrowser
          image: filebrowser/filebrowser
          ports:
            - containerPort: 80
          volumeMounts:
            - name: storage
              mountPath: /srv
            - name: external
              mountPath: /srv/external
            - name: database
              mountPath: /database/filebrowser.db
            - name: config
              mountPath: /config
            - name: settings-json
              mountPath: /config/settings.json
              subPath: settings.json
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          readinessProbe:
            exec:
              command: ["test", "-f", "/config/DONOTDELETE"]
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: storage
          hostPath:
            path: /mnt/secondary
            type: Directory
        - name: external
          hostPath:
            path: /mnt/external
            type: Directory
        - name: database
          hostPath:
            path: /mnt/secondary/config/filebrowser/filebrowser.db
            type: FileOrCreate
        - name: config
          hostPath:
            path: /mnt/secondary/config/filebrowser
            type: Directory
        - name: settings-json
          configMap:
            name: settings-json
      securityContext:
        fsGroup: 1000 # Ensures that the volume is accessible by the container user.
        # This is crucial for handling files owned by both root and user 1001
        # The container will run as user 1001 and group 1001, and fsGroup ensures
        # that it has appropriate access to the volume, regardless of the file owner.
        # Note: If you have files owned by other users, you may need a more flexible approach like using an init container or more complex volume mounting solutions.
---

